{
    "pipes": [],
    "interfaces": [],
    "injectables": [],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "AfterLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    labelPosition: 'after',\n    name: 'Radio Group',\n    listOfOptions: ['Option 1', 'Option 2', 'Option 3'],\n  },\n\n  play: async (\n    {\n      canvasElement\n    }\n  ) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Option 1\")).toBeTruthy();\n  }\n}"
            },
            {
                "name": "BeforeLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    labelPosition: 'before',\n    name: 'Radio Group',\n    listOfOptions: ['Option 1', 'Option 2', 'Option 3'],\n  },\n\n  play: async (\n    {\n      canvasElement\n    }\n  ) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Option 1\")).toBeTruthy();\n  }\n}"
            },
            {
                "name": "Buffer",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/progress-bar/progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    mode: 'buffer',\n    value: 50,\n    bufferValue: 75,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByRole('progressbar')).toBeTruthy();\n    const progressBar = canvas.getByRole('progressbar');\n    expect(progressBar).toHaveAttribute('aria-valuenow', '50');\n    expect(progressBar).toHaveAttribute('aria-valuemax', '75');\n  },\n}"
            },
            {
                "name": "CenterTopPosition",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    horizontalPosition: \"center\",\n    verticalPosition: \"top\",\n    duration: 3000,\n    action: \"New Action\",\n    message: \"New Message\"\n  },\n\n}"
            },
            {
                "name": "ChangedSubtitle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/card/card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    subtitle: \"changed subtitle\"\n  }\n}"
            },
            {
                "name": "ChangedTitle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/card/card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    subtitle: \"changed subtitle\",\n    title: \"ChangedTitle\"\n  }\n}"
            },
            {
                "name": "CheckboxWithSubtasks",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/check-box/check-box.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    task: {\n      name: 'Task 1',\n      completed: false,\n      subtasks: [\n        { name: 'Subtask 1', completed: false },\n        { name: 'Subtask 2', completed: true },\n      ],\n    },\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Task 1\")).toBeTruthy();\n    expect(canvas.getByText(\"Subtask 1\")).toBeTruthy();\n    expect(canvas.getByText(\"Subtask 2\")).toBeTruthy();\n  },\n}"
            },
            {
                "name": "CheckedCheckbox",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/check-box/check-box.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    checked: true,\n    task: { name: 'Task 1', completed: true },\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Task 1\")).toBeTruthy();\n  },\n}"
            },
            {
                "name": "CheckedDisabledToggle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/slide-toggle/slide-toggle.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    disabled: true,\n    checked: true\n  }\n}"
            },
            {
                "name": "config",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/.storybook/main.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "StorybookConfig",
                "defaultValue": "{\n  stories: ['../**/*.@(mdx|stories.@(js|jsx|ts|tsx))'],\n  addons: [\n    '@storybook/addon-essentials',\n    '@storybook/addon-interactions',\n    '@storybook/addon-docs'\n  ],\n  framework: {\n    name: '@storybook/angular',\n    options: {},\n  },\n  docs: {\n    autodocs: true,\n    defaultName: 'Docs'\n  }\n}"
            },
            {
                "name": "CustomLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/basic-button/basic-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Custom Button Text',\n    disabled: false,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Custom Button Text\")).toBeTruthy();\n  },\n}"
            },
            {
                "name": "CustomLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    disabled: false,\n    label: \"this is the label text\"\n  }\n}"
            },
            {
                "name": "CustomLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    disabled: false,\n    label: \"this is the label text\"\n  }\n}"
            },
            {
                "name": "CustomLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/raised-button/raised-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Custom Raised Button',\n    disabled: false,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Custom Raised Button\")).toBeTruthy();\n  },\n}"
            },
            {
                "name": "CustomLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    horizontalPosition: \"center\",\n    verticalPosition: \"top\",\n    duration: 3000,\n    action: \"New Action\",\n    message: \"New Message\",\n    snackbarLabel: \"Click to open snackbar\"\n  }\n}"
            },
            {
                "name": "CustomLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/raised-button/raised-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Custom Raised Button',\n    disabled: false,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Custom Raised Button\")).toBeTruthy();\n  },\n}"
            },
            {
                "name": "CustomLabels",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    name: 'New Radio Group',\n    listOfOptions: ['Option A', 'Option B', 'Option C'],\n  },\n\n  play: async (\n    {\n      canvasElement\n    }\n  ) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Option 1\")).toBeTruthy();\n  }\n}"
            },
            {
                "name": "CustomPlaceHolderText",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    disabled: true,\n    placeholder: \"this is the placeholder text\"\n  }\n}"
            },
            {
                "name": "decorators",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/.storybook/preview.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "[]",
                "defaultValue": "[\n  moduleMetadata({\n    imports: [\n      BrowserAnimationsModule,\n      MatButtonModule,\n      MatDatepickerModule,\n      MatFormFieldModule,\n      MatInputModule,\n      MatIconModule,\n    ],\n  }),\n]"
            },
            {
                "name": "Determinate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/progress-bar/progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    mode: 'determinate',\n    value: 50,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByRole('progressbar')).toBeTruthy();\n  },\n}"
            },
            {
                "name": "DeterminateSpinner",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/progress-spinner/progress-spinner.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    // Example property for mode\n    mode: 'determinate',\n\n    // Example property for value\n    value: 50,\n\n    diameter: 10,\n    strokeWidth: 5\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByRole('progressbar')).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/basic-button/basic-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Button Text',\n    disabled: true,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Button Text\")).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    disabled: true\n  }\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/flat-button/flat-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n\n  args: {\n    label: 'Button Text',\n    disabled: true,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText('Button Text')).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    disabled: true\n  }\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    disabled: true,\n    name: 'Disabled Radio Group',\n    listOfOptions: ['Option 1', 'Option 2', 'Option 3'],\n  },\n\n  play: async (\n    {\n      canvasElement\n    }\n  ) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Option 1\")).toBeTruthy();\n  }\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/raised-button/raised-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Raised Button',\n    disabled: true,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Raised Button\")).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Disabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    position: \"left\",\n    disabled: true\n  }\n}"
            },
            {
                "name": "DisabledAndCheckedCheckbox",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/check-box/check-box.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    checked: true,\n    disabled: true,\n    task: { name: 'Task 1', completed: true },\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Task 1\")).toBeTruthy();\n  },\n}"
            },
            {
                "name": "DisabledCheckbox",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/check-box/check-box.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    disabled: true,\n\n    task: {\n      \"name\": \"Task 1\",\n      \"completed\": false\n    },\n\n    checked: false\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Task 1\")).toBeTruthy();\n  },\n\n}"
            },
            {
                "name": "DisabledChip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/avatar-chip/avatar-chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    removable: false,\n    disabled: true\n  }\n}"
            },
            {
                "name": "DisabledChip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/chip/chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    disabled: true\n  }\n}"
            },
            {
                "name": "DisabledRangeSlider",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/range-slider/range-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    disabled: true\n  }\n}"
            },
            {
                "name": "DisabledSlider",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    disabled: true\n  }\n}"
            },
            {
                "name": "DisabledToggle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/slide-toggle/slide-toggle.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    disabled: true\n  }\n}"
            },
            {
                "name": "DisplayGroupName",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    displayGroupName: true,\n    name: 'Radio Group Name',\n    listOfOptions: ['Option 1', 'Option 2', 'Option 3'],\n  },\n\n  play: async (\n    {\n      canvasElement\n    }\n  ) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Option 1\")).toBeTruthy();\n  }\n}"
            },
            {
                "name": "DisplaySelectedOption",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    displaySelectedOption: true,\n    name: 'Radio Group',\n    listOfOptions: ['Option 1', 'Option 2', 'Option 3'],\n  },\n\n  play: async (\n    {\n      canvasElement\n    }\n  ) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Option 1\")).toBeTruthy();\n  }\n}"
            },
            {
                "name": "Duration5Seconds",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    horizontalPosition: \"end\",\n    verticalPosition: \"bottom\",\n    duration: 5000\n  }\n}"
            },
            {
                "name": "EndBottomPosition",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    horizontalPosition: \"end\",\n    verticalPosition: \"bottom\"\n  }\n}"
            },
            {
                "name": "FabButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    disabled: false,\n    buttonType: ButtonType.FAB\n  }\n}"
            },
            {
                "name": "FlatButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    disabled: false,\n    buttonType: ButtonType.FLAT\n  }\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/basic-icon/basic-icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/basic-icon works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/basic-toolbar/basic-toolbar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/basic-toolbar works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/button-toggle/button-toggle.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/card/card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Card Title\")).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/chip-drag-drop/chip-drag-drop.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Apple\")).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/chip/chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/chip works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/date-picker/date-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/date-picker works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/range-slider/range-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/range-slider works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/slide-toggle/slide-toggle.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/slide-toggle works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/stacked-chips/stacked-chips.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/stacked-chips works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/tabs/tabs.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/tabs works!/gi)).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Heading",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "HideDelay5Seconds",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    position: \"above\",\n    disabled: false,\n    showDelay: 2000,\n    hideDelay: 5000\n  }\n}"
            },
            {
                "name": "Indeterminate",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/progress-bar/progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    mode: 'indeterminate',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByRole('progressbar')).toBeTruthy();\n  },\n}"
            },
            {
                "name": "LeftPositonTip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    position: \"left\",\n    disabled: false\n  }\n}"
            },
            {
                "name": "MaxValue1000",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: \"Basic Slider\",\n    max: 1000\n  },\n\n  play: async (\n    {\n      canvasElement\n    }\n  ) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Basic Slider\")).toBeTruthy();\n  }\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/avatar-chip/avatar-chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<AvatarChipComponent>",
                "defaultValue": "{\n  component: AvatarChipComponent,\n  title: 'AvatarChipComponent',\n  argTypes: {\n    avatar: {\n      control: {\n        type: 'text',\n      },\n    },\n    label: {\n      control: {\n        type: 'text',\n      },\n    },\n    removable: {\n      control: {\n        type: 'boolean',\n      },\n    },\n    disabled: {\n      control: {\n        type: 'boolean',\n      },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/basic-button/basic-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BasicButtonComponent>",
                "defaultValue": "{\n  component: BasicButtonComponent,\n  title: 'BasicButtonComponent',\n  argTypes: {\n    label: { control: 'text' },\n    disabled: { control: 'boolean' },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/basic-icon/basic-icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BasicIconComponent>",
                "defaultValue": "{\n  component: BasicIconComponent,\n  title: 'BasicIconComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BasicSliderComponent>",
                "defaultValue": "{\n  component: BasicSliderComponent,\n  title: 'BasicSliderComponent',\n  argTypes: {\n    disabled: {\n      control: 'boolean',\n    },\n    max: {\n      control: 'number',\n    },\n    min: {\n      control: 'number',\n    },\n    showTicks: {\n      control: 'boolean',\n    },\n    step: {\n      control: 'number',\n    },\n    thumbLabel: {\n      control: 'boolean',\n    },\n    value: {\n      control: 'number',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/basic-toolbar/basic-toolbar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<BasicToolbarComponent>",
                "defaultValue": "{\n  component: BasicToolbarComponent,\n  title: 'BasicToolbarComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonComponent>",
                "defaultValue": "{\n  component: ButtonComponent,\n  title: 'ButtonComponent',\n  argTypes: {\n    label: {\n      control: {\n        type: 'text',\n      },\n    },\n    disabled: {\n      control: {\n        type: 'boolean',\n      },\n    },\n    buttonType: {\n      options: [\n        ButtonType.RAISED,\n        ButtonType.FAB,\n        ButtonType.BUTTON,\n        ButtonType.FLAT,\n        ButtonType.STROKED,\n        ButtonType.MINI_FAB\n      ],\n      control: {\n        type: 'radio',\n      },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/button-toggle/button-toggle.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ButtonToggleComponent>",
                "defaultValue": "{\n  component: ButtonToggleComponent,\n  title: 'ButtonToggleComponent',\n  argTypes: {\n    groupLabel: {\n      control: {\n        type: 'text',\n      },\n      defaultValue: 'Select an option',\n    },\n    selection: {\n\n        options: ['single', 'multiple'],\n        control: {\n          type: 'radio',\n        },\n    },\n    options: {\n      control: {\n        type: 'object',\n      },\n      defaultValue: ['Bold', 'Italic', 'Underline'],\n    },\n    disabled: {\n      control: {\n        type: 'boolean',\n      },\n      defaultValue: false,\n    },\n    value: {\n      control: {\n        type: 'text',\n      },\n      defaultValue: '',\n    },\n    hideSelectionIndicator: {\n      control: {\n        type: 'boolean',\n      },\n      defaultValue: false,\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/card/card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CardComponent>",
                "defaultValue": "{\n  component: CardComponent,\n  title: 'CardComponent',\n  argTypes: {\n    title: { control: 'text' },\n    subtitle: { control: 'text' },\n    content: { control: 'text' },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/check-box/check-box.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<CheckBoxComponent>",
                "defaultValue": "{\n  component: CheckBoxComponent,\n  title: 'CheckBoxComponent',\n  argTypes: {\n    checked: {\n      control: 'boolean',\n    },\n    disabled: {\n      control: 'boolean',\n    },\n    task: {\n      control: 'object',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/chip-drag-drop/chip-drag-drop.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ChipDragDropComponent>",
                "defaultValue": "{\n  component: ChipDragDropComponent,\n  title: 'ChipDragDropComponent',\n  argTypes: {\n    items: {\n      control: {\n        type: 'object',\n      },\n    },\n    disabled: {\n      control: {\n        type: 'boolean',\n      },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/chip/chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ChipComponent>",
                "defaultValue": "{\n  component: ChipComponent,\n  title: 'ChipComponent',\n  argTypes: {\n    labels: {\n      control: {\n        type: 'text',\n      },\n    },\n    disabled: {\n      control: {\n        type: 'boolean',\n      },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/date-picker/date-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<DatePickerComponent>",
                "defaultValue": "{\n  component: DatePickerComponent,\n  title: 'DatePickerComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/flat-button/flat-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<FlatButtonComponent>",
                "defaultValue": "{\n  component: FlatButtonComponent,\n  title: 'FlatButtonComponent',\n  argTypes: {\n    label: { control: 'text' },\n    disabled: { control: 'boolean' },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<InputComponent>",
                "defaultValue": "{\n  component: InputComponent,\n  title: 'InputComponent',\n  argTypes: {\n    label: {\n      control: {\n        type: 'text',\n      },\n    },\n    disabled: {\n      control: {\n        type: 'boolean',\n      },\n    },\n    placeholder: {\n      control: {\n        type: 'text',\n      },\n    },\n    value: {\n      control: {\n        type: 'text',\n      },\n    },\n    valueChange: {\n      action: 'valueChange',\n    },\n\n\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/progress-bar/progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProgressBarComponent>",
                "defaultValue": "{\n  component: ProgressBarComponent,\n  title: 'ProgressBarComponent',\n  argTypes: {\n    value: {\n      control: {\n        type: 'range',\n        min: 0,\n        max: 100,\n        step: 10\n      },\n    },\n    bufferValue: {\n      control: {\n        type: 'range',\n        min: 0,\n        max: 100,\n        step: 10\n      },\n    },\n    mode: {\n      options: ['determinate', 'indeterminate', 'query', 'buffer'],\n      control: {\n        type: 'radio',\n      },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RadioButtonComponent>",
                "defaultValue": "{\n  component: RadioButtonComponent,\n  title: 'RadioButtonComponent',\n  argTypes: {\n    disabled: {\n      control: {\n        type: 'boolean',\n      },\n    },\n    name: {\n      control: {\n        type: 'text',\n      },\n    },\n\n    labelPosition: {\n      control: {\n        type: 'inline-radio',\n        options: ['before', 'after'],\n      },\n    },\n    required: {\n      control: {\n        type: 'boolean',\n      },\n    },\n    value: {\n      control: {\n        type: 'text',\n      },\n    },\n    displaySelectedOption: {\n      control: {\n        type: 'boolean',\n      },\n    },\n    displayGroupName: {\n      control: {\n        type: 'boolean',\n      },\n    },\n    listOfOptions: {\n      control: {\n        type: 'object',\n      },\n    },\n\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/raised-button/raised-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RaisedButtonComponent>",
                "defaultValue": "{\n  component: RaisedButtonComponent,\n  title: 'RaisedButtonComponent',\n  argTypes: {\n    label: { control: 'text' },\n    disabled: { control: 'boolean' },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/progress-spinner/progress-spinner.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ProgressSpinnerComponent>",
                "defaultValue": "{\n  component: ProgressSpinnerComponent,\n  title: 'ProgressSpinnerComponent',\n  argTypes: {\n    diameter: {\n      control: {\n        type: 'number',\n      },\n    },\n    strokeWidth: {\n      control: {\n        type: 'number',\n      },\n    },\n    mode: {\n      options: ['determinate', 'indeterminate'],\n      control: {\n        type: 'radio',\n      },\n    },\n    value: {\n      control: {\n        type: 'range',\n        min: 0,\n        max:100,\n        step: 10\n      },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/range-slider/range-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RangeSliderComponent>",
                "defaultValue": "{\n  component: RangeSliderComponent,\n  title: 'RangeSliderComponent',\n  argTypes: {\n    disabled: {\n      control: 'boolean',\n    },\n    max: {\n      control: 'number',\n    },\n    min: {\n      control: 'number',\n    },\n    showTicks: {\n      control: 'boolean',\n    },\n    step: {\n      control: 'number',\n    },\n    thumbLabel: {\n      control: 'boolean',\n    },\n    startValue: {\n      control: 'number',\n    },\n    endValue: {\n      control: 'number',\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SelectComponent>",
                "defaultValue": "{\n  component: SelectComponent,\n  title: 'SelectComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/slide-toggle/slide-toggle.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SlideToggleComponent>",
                "defaultValue": "{\n  component: SlideToggleComponent,\n  title: 'SlideToggleComponent',\n  argTypes: {\n    label: { control: 'text' },\n    checked: { control: 'boolean' },\n    disabled: { control: 'boolean' },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<SnackBarComponent>",
                "defaultValue": "{\n  component: SnackBarComponent,\n  title: 'SnackBarComponent',\n  argTypes: {\n    snackbarLabel: {\n      control: { type: 'text' },\n    },\n    message: {\n      control: { type: 'text' },\n    },\n    action: {\n      control: { type: 'text' },\n    },\n    duration: {\n      control: { type: 'number' },\n    },\n    horizontalPosition: {\n      control: { type: 'select' },\n      options: ['start', 'center', 'end', 'left', 'right'],\n    },\n    verticalPosition: {\n      control: { type: 'select' },\n      options: ['top', 'bottom'],\n    },\n    disabled: {\n      control: { type: 'boolean' },\n    },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/raised-button/raised-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<RaisedButtonComponent>",
                "defaultValue": "{\n  component: RaisedButtonComponent,\n  title: 'RaisedButtonComponent',\n  argTypes: {\n    label: { control: 'text' },\n    disabled: { control: 'boolean' },\n  },\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/stacked-chips/stacked-chips.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<StackedChipsComponent>",
                "defaultValue": "{\n  component: StackedChipsComponent,\n  title: 'StackedChipsComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TableComponent>",
                "defaultValue": "{\n  component: TableComponent,\n  title: 'TableComponent',\n  argTypes: {\n    displayedColumns: {\n      control: {\n        type: 'object',\n      },\n    },\n    dataSource: {\n      control: {\n        type: 'object',\n      },\n    },\n  },\n\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/tabs/tabs.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<TabsComponent>",
                "defaultValue": "{\n  component: TabsComponent,\n  title: 'TabsComponent',\n}"
            },
            {
                "name": "meta",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Meta<ToolTipComponent>",
                "defaultValue": "{\n  component: ToolTipComponent,\n  title: 'ToolTipComponent',\n  argTypes: {\n    tool: {\n      control: { type: 'text' },\n    },\n    tip: {\n      control: { type: 'text' },\n    },\n    position: {\n      control: { type: 'select' },\n      options: ['above', 'below', 'before', 'after', 'left', 'right'],\n    },\n    disabled: {\n      control: { type: 'boolean' },\n    },\n    showDelay: {\n      control: { type: 'number' },\n    },\n    hideDelay: {\n      control: { type: 'number' },\n    },\n  },\n}"
            },
            {
                "name": "Min10Max1000",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/range-slider/range-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    disabled: false,\n    max: 1000,\n    min: 10\n  }\n}"
            },
            {
                "name": "MinValue50",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: \"Basic Slider\",\n    max: 1000,\n    min: 50\n  },\n\n  play: async (\n    {\n      canvasElement\n    }\n  ) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Basic Slider\")).toBeTruthy();\n  }\n}"
            },
            {
                "name": "NewChipLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/avatar-chip/avatar-chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: \"New Chip\"\n  }\n}"
            },
            {
                "name": "NewLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    disabled: false,\n    placeholder: \"this is the placeholder text\",\n    label: \"New Label\"\n  }\n}"
            },
            {
                "name": "NewLabelForToggle",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/slide-toggle/slide-toggle.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    disabled: false,\n    checked: true,\n    label: \"New Label for Toggle\"\n  }\n}"
            },
            {
                "name": "NewMessageNewAction",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    horizontalPosition: \"end\",\n    verticalPosition: \"bottom\",\n    duration: 5000,\n    action: \"New Action\",\n    message: \"New Message\"\n  }\n}"
            },
            {
                "name": "NormalButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    disabled: false,\n    buttonType: ButtonType.BUTTON\n  }\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/avatar-chip/avatar-chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/basic-button/basic-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Button Text',\n    disabled: false,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Button Text\")).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/basic-icon/basic-icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Basic Slider',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Basic Slider\")).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/basic-toolbar/basic-toolbar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/button-toggle/button-toggle.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/card/card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/check-box/check-box.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    task: {\n      name: 'Parent Task 1',\n      completed: false,\n      subtasks: [\n        { name: 'Subtask 1', completed: false },\n        { name: 'Subtask 2', completed: false },\n        { name: 'Subtask 3', completed: true },\n      ],\n    },\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Task 1\")).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/chip-drag-drop/chip-drag-drop.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/chip/chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/date-picker/date-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/flat-button/flat-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n\n  args: {\n    label: 'Button Text',\n    disabled: false,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText('Button Text')).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/progress-bar/progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByRole('progressbar')).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    name: 'Radio Group',\n    listOfOptions: ['Option 1', 'Option 2', 'Option 3'],\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText('Option 1')).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/raised-button/raised-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Raised Button',\n    disabled: false,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Raised Button\")).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/progress-spinner/progress-spinner.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByRole('progressbar')).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    list: [\n      'Apple',\n      'Banana',\n      'Cherry',\n      'Date',\n    ],\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const selectElement = canvas.getByRole('combobox');\n    expect(selectElement).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/slide-toggle/slide-toggle.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/raised-button/raised-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: 'Raised Button',\n    disabled: false,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Raised Button\")).toBeTruthy();\n  },\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/stacked-chips/stacked-chips.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n  },\n\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/tabs/tabs.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Primary",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {},\n}"
            },
            {
                "name": "Query",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/progress-bar/progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    mode: 'query',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByRole('progressbar')).toBeTruthy();\n  },\n}"
            },
            {
                "name": "RaisedButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    disabled: false,\n    buttonType: ButtonType.RAISED\n  }\n}"
            },
            {
                "name": "RaisedDisabled",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    disabled: true,\n    buttonType: ButtonType.RAISED\n  }\n}"
            },
            {
                "name": "Required",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    required: true,\n    name: 'Required Radio Group',\n    listOfOptions: ['Option 1', 'Option 2', 'Option 3'],\n  },\n\n  play: async (\n    {\n      canvasElement\n    }\n  ) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Option 1\")).toBeTruthy();\n  }\n}"
            },
            {
                "name": "RightPositionTip",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    position: \"right\",\n    disabled: false\n  }\n}"
            },
            {
                "name": "ShowDelay2Seconds",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    position: \"above\",\n    disabled: false,\n    showDelay: 2000\n  }\n}"
            },
            {
                "name": "SliderStepWith10",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: \"Basic Slider\",\n    max: 1000,\n    min: 50,\n    step: 10\n  },\n\n  play: async (\n    {\n      canvasElement\n    }\n  ) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Basic Slider\")).toBeTruthy();\n  }\n}"
            },
            {
                "name": "SliderWithThumbLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: \"Basic Slider\",\n    max: 1000,\n    min: 50,\n    step: 10,\n    thumbLabel: true\n  },\n\n  play: async (\n    {\n      canvasElement\n    }\n  ) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Basic Slider\")).toBeTruthy();\n  }\n}"
            },
            {
                "name": "SliderWithTicks",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    label: \"Basic Slider\",\n    max: 1000,\n    min: 50,\n    step: 10,\n    thumbLabel: true,\n    showTicks: true\n  },\n\n  play: async (\n    {\n      canvasElement\n    }\n  ) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Basic Slider\")).toBeTruthy();\n  }\n}"
            },
            {
                "name": "SmallSpinner",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/progress-spinner/progress-spinner.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    diameter: 20, // Example property for size\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByRole('progressbar')).toBeTruthy();\n  },\n}"
            },
            {
                "name": "StartBottom",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    horizontalPosition: \"start\",\n    verticalPosition: \"bottom\"\n  }\n}"
            },
            {
                "name": "StartTopPosition",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    horizontalPosition: \"start\",\n    verticalPosition: \"top\"\n  }\n}"
            },
            {
                "name": "StrokedButton",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    disabled: false,\n    buttonType: ButtonType.STROKED\n  }\n}"
            },
            {
                "name": "TipAboveTool",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    position: \"above\",\n    disabled: false\n  }\n}"
            },
            {
                "name": "WithThumbLabel",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/range-slider/range-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    disabled: false,\n    max: 1000,\n    min: 10,\n    showTicks: false,\n    thumbLabel: true\n  }\n}"
            },
            {
                "name": "WithTicks",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "libs/mui-lib/src/lib/range-slider/range-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "Story",
                "defaultValue": "{\n  args: {\n    disabled: false,\n    max: 10000,\n    min: 10,\n    showTicks: true,\n    thumbLabel: false\n  }\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<AvatarChipComponent>",
                "file": "libs/mui-lib/src/lib/avatar-chip/avatar-chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BasicButtonComponent>",
                "file": "libs/mui-lib/src/lib/basic-button/basic-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BasicIconComponent>",
                "file": "libs/mui-lib/src/lib/basic-icon/basic-icon.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BasicSliderComponent>",
                "file": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<BasicToolbarComponent>",
                "file": "libs/mui-lib/src/lib/basic-toolbar/basic-toolbar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonComponent>",
                "file": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ButtonToggleComponent>",
                "file": "libs/mui-lib/src/lib/button-toggle/button-toggle.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CardComponent>",
                "file": "libs/mui-lib/src/lib/card/card.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<CheckBoxComponent>",
                "file": "libs/mui-lib/src/lib/check-box/check-box.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ChipDragDropComponent>",
                "file": "libs/mui-lib/src/lib/chip-drag-drop/chip-drag-drop.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ChipComponent>",
                "file": "libs/mui-lib/src/lib/chip/chip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<DatePickerComponent>",
                "file": "libs/mui-lib/src/lib/date-picker/date-picker.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<FlatButtonComponent>",
                "file": "libs/mui-lib/src/lib/flat-button/flat-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<InputComponent>",
                "file": "libs/mui-lib/src/lib/input/input.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProgressBarComponent>",
                "file": "libs/mui-lib/src/lib/progress-bar/progress-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RadioButtonComponent>",
                "file": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RaisedButtonComponent>",
                "file": "libs/mui-lib/src/lib/raised-button/raised-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ProgressSpinnerComponent>",
                "file": "libs/mui-lib/src/lib/progress-spinner/progress-spinner.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SelectComponent>",
                "file": "libs/mui-lib/src/lib/select/select.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SlideToggleComponent>",
                "file": "libs/mui-lib/src/lib/slide-toggle/slide-toggle.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<SnackBarComponent>",
                "file": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<RaisedButtonComponent>",
                "file": "libs/mui-lib/src/lib/raised-button/raised-button.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<StackedChipsComponent>",
                "file": "libs/mui-lib/src/lib/stacked-chips/stacked-chips.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TableComponent>",
                "file": "libs/mui-lib/src/lib/table/table.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<TabsComponent>",
                "file": "libs/mui-lib/src/lib/tabs/tabs.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            },
            {
                "name": "Story",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "StoryObj<ToolTipComponent>",
                "file": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 183
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts": [
                {
                    "name": "AfterLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    labelPosition: 'after',\n    name: 'Radio Group',\n    listOfOptions: ['Option 1', 'Option 2', 'Option 3'],\n  },\n\n  play: async (\n    {\n      canvasElement\n    }\n  ) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Option 1\")).toBeTruthy();\n  }\n}"
                },
                {
                    "name": "BeforeLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    labelPosition: 'before',\n    name: 'Radio Group',\n    listOfOptions: ['Option 1', 'Option 2', 'Option 3'],\n  },\n\n  play: async (\n    {\n      canvasElement\n    }\n  ) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Option 1\")).toBeTruthy();\n  }\n}"
                },
                {
                    "name": "CustomLabels",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    name: 'New Radio Group',\n    listOfOptions: ['Option A', 'Option B', 'Option C'],\n  },\n\n  play: async (\n    {\n      canvasElement\n    }\n  ) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Option 1\")).toBeTruthy();\n  }\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    disabled: true,\n    name: 'Disabled Radio Group',\n    listOfOptions: ['Option 1', 'Option 2', 'Option 3'],\n  },\n\n  play: async (\n    {\n      canvasElement\n    }\n  ) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Option 1\")).toBeTruthy();\n  }\n}"
                },
                {
                    "name": "DisplayGroupName",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    displayGroupName: true,\n    name: 'Radio Group Name',\n    listOfOptions: ['Option 1', 'Option 2', 'Option 3'],\n  },\n\n  play: async (\n    {\n      canvasElement\n    }\n  ) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Option 1\")).toBeTruthy();\n  }\n}"
                },
                {
                    "name": "DisplaySelectedOption",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    displaySelectedOption: true,\n    name: 'Radio Group',\n    listOfOptions: ['Option 1', 'Option 2', 'Option 3'],\n  },\n\n  play: async (\n    {\n      canvasElement\n    }\n  ) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Option 1\")).toBeTruthy();\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RadioButtonComponent>",
                    "defaultValue": "{\n  component: RadioButtonComponent,\n  title: 'RadioButtonComponent',\n  argTypes: {\n    disabled: {\n      control: {\n        type: 'boolean',\n      },\n    },\n    name: {\n      control: {\n        type: 'text',\n      },\n    },\n\n    labelPosition: {\n      control: {\n        type: 'inline-radio',\n        options: ['before', 'after'],\n      },\n    },\n    required: {\n      control: {\n        type: 'boolean',\n      },\n    },\n    value: {\n      control: {\n        type: 'text',\n      },\n    },\n    displaySelectedOption: {\n      control: {\n        type: 'boolean',\n      },\n    },\n    displayGroupName: {\n      control: {\n        type: 'boolean',\n      },\n    },\n    listOfOptions: {\n      control: {\n        type: 'object',\n      },\n    },\n\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    name: 'Radio Group',\n    listOfOptions: ['Option 1', 'Option 2', 'Option 3'],\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText('Option 1')).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "Required",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    required: true,\n    name: 'Required Radio Group',\n    listOfOptions: ['Option 1', 'Option 2', 'Option 3'],\n  },\n\n  play: async (\n    {\n      canvasElement\n    }\n  ) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Option 1\")).toBeTruthy();\n  }\n}"
                }
            ],
            "libs/mui-lib/src/lib/progress-bar/progress-bar.component.stories.ts": [
                {
                    "name": "Buffer",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/progress-bar/progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    mode: 'buffer',\n    value: 50,\n    bufferValue: 75,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByRole('progressbar')).toBeTruthy();\n    const progressBar = canvas.getByRole('progressbar');\n    expect(progressBar).toHaveAttribute('aria-valuenow', '50');\n    expect(progressBar).toHaveAttribute('aria-valuemax', '75');\n  },\n}"
                },
                {
                    "name": "Determinate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/progress-bar/progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    mode: 'determinate',\n    value: 50,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByRole('progressbar')).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "Indeterminate",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/progress-bar/progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    mode: 'indeterminate',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByRole('progressbar')).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/progress-bar/progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProgressBarComponent>",
                    "defaultValue": "{\n  component: ProgressBarComponent,\n  title: 'ProgressBarComponent',\n  argTypes: {\n    value: {\n      control: {\n        type: 'range',\n        min: 0,\n        max: 100,\n        step: 10\n      },\n    },\n    bufferValue: {\n      control: {\n        type: 'range',\n        min: 0,\n        max: 100,\n        step: 10\n      },\n    },\n    mode: {\n      options: ['determinate', 'indeterminate', 'query', 'buffer'],\n      control: {\n        type: 'radio',\n      },\n    },\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/progress-bar/progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByRole('progressbar')).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "Query",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/progress-bar/progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    mode: 'query',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByRole('progressbar')).toBeTruthy();\n  },\n}"
                }
            ],
            "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts": [
                {
                    "name": "CenterTopPosition",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    horizontalPosition: \"center\",\n    verticalPosition: \"top\",\n    duration: 3000,\n    action: \"New Action\",\n    message: \"New Message\"\n  },\n\n}"
                },
                {
                    "name": "CustomLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    horizontalPosition: \"center\",\n    verticalPosition: \"top\",\n    duration: 3000,\n    action: \"New Action\",\n    message: \"New Message\",\n    snackbarLabel: \"Click to open snackbar\"\n  }\n}"
                },
                {
                    "name": "Duration5Seconds",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    horizontalPosition: \"end\",\n    verticalPosition: \"bottom\",\n    duration: 5000\n  }\n}"
                },
                {
                    "name": "EndBottomPosition",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    horizontalPosition: \"end\",\n    verticalPosition: \"bottom\"\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SnackBarComponent>",
                    "defaultValue": "{\n  component: SnackBarComponent,\n  title: 'SnackBarComponent',\n  argTypes: {\n    snackbarLabel: {\n      control: { type: 'text' },\n    },\n    message: {\n      control: { type: 'text' },\n    },\n    action: {\n      control: { type: 'text' },\n    },\n    duration: {\n      control: { type: 'number' },\n    },\n    horizontalPosition: {\n      control: { type: 'select' },\n      options: ['start', 'center', 'end', 'left', 'right'],\n    },\n    verticalPosition: {\n      control: { type: 'select' },\n      options: ['top', 'bottom'],\n    },\n    disabled: {\n      control: { type: 'boolean' },\n    },\n  },\n}"
                },
                {
                    "name": "NewMessageNewAction",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    horizontalPosition: \"end\",\n    verticalPosition: \"bottom\",\n    duration: 5000,\n    action: \"New Action\",\n    message: \"New Message\"\n  }\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                },
                {
                    "name": "StartBottom",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    horizontalPosition: \"start\",\n    verticalPosition: \"bottom\"\n  }\n}"
                },
                {
                    "name": "StartTopPosition",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    horizontalPosition: \"start\",\n    verticalPosition: \"top\"\n  }\n}"
                }
            ],
            "libs/mui-lib/src/lib/card/card.component.stories.ts": [
                {
                    "name": "ChangedSubtitle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/card/card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    subtitle: \"changed subtitle\"\n  }\n}"
                },
                {
                    "name": "ChangedTitle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/card/card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    subtitle: \"changed subtitle\",\n    title: \"ChangedTitle\"\n  }\n}"
                },
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/card/card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Card Title\")).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/card/card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CardComponent>",
                    "defaultValue": "{\n  component: CardComponent,\n  title: 'CardComponent',\n  argTypes: {\n    title: { control: 'text' },\n    subtitle: { control: 'text' },\n    content: { control: 'text' },\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/card/card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/mui-lib/src/lib/check-box/check-box.component.stories.ts": [
                {
                    "name": "CheckboxWithSubtasks",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/check-box/check-box.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    task: {\n      name: 'Task 1',\n      completed: false,\n      subtasks: [\n        { name: 'Subtask 1', completed: false },\n        { name: 'Subtask 2', completed: true },\n      ],\n    },\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Task 1\")).toBeTruthy();\n    expect(canvas.getByText(\"Subtask 1\")).toBeTruthy();\n    expect(canvas.getByText(\"Subtask 2\")).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "CheckedCheckbox",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/check-box/check-box.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    checked: true,\n    task: { name: 'Task 1', completed: true },\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Task 1\")).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "DisabledAndCheckedCheckbox",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/check-box/check-box.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    checked: true,\n    disabled: true,\n    task: { name: 'Task 1', completed: true },\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Task 1\")).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "DisabledCheckbox",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/check-box/check-box.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    disabled: true,\n\n    task: {\n      \"name\": \"Task 1\",\n      \"completed\": false\n    },\n\n    checked: false\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Task 1\")).toBeTruthy();\n  },\n\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/check-box/check-box.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<CheckBoxComponent>",
                    "defaultValue": "{\n  component: CheckBoxComponent,\n  title: 'CheckBoxComponent',\n  argTypes: {\n    checked: {\n      control: 'boolean',\n    },\n    disabled: {\n      control: 'boolean',\n    },\n    task: {\n      control: 'object',\n    },\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/check-box/check-box.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    task: {\n      name: 'Parent Task 1',\n      completed: false,\n      subtasks: [\n        { name: 'Subtask 1', completed: false },\n        { name: 'Subtask 2', completed: false },\n        { name: 'Subtask 3', completed: true },\n      ],\n    },\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Task 1\")).toBeTruthy();\n  },\n}"
                }
            ],
            "libs/mui-lib/src/lib/slide-toggle/slide-toggle.component.stories.ts": [
                {
                    "name": "CheckedDisabledToggle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/slide-toggle/slide-toggle.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    disabled: true,\n    checked: true\n  }\n}"
                },
                {
                    "name": "DisabledToggle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/slide-toggle/slide-toggle.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    disabled: true\n  }\n}"
                },
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/slide-toggle/slide-toggle.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/slide-toggle works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/slide-toggle/slide-toggle.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SlideToggleComponent>",
                    "defaultValue": "{\n  component: SlideToggleComponent,\n  title: 'SlideToggleComponent',\n  argTypes: {\n    label: { control: 'text' },\n    checked: { control: 'boolean' },\n    disabled: { control: 'boolean' },\n  },\n}"
                },
                {
                    "name": "NewLabelForToggle",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/slide-toggle/slide-toggle.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    disabled: false,\n    checked: true,\n    label: \"New Label for Toggle\"\n  }\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/slide-toggle/slide-toggle.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/mui-lib/.storybook/main.ts": [
                {
                    "name": "config",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/.storybook/main.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "StorybookConfig",
                    "defaultValue": "{\n  stories: ['../**/*.@(mdx|stories.@(js|jsx|ts|tsx))'],\n  addons: [\n    '@storybook/addon-essentials',\n    '@storybook/addon-interactions',\n    '@storybook/addon-docs'\n  ],\n  framework: {\n    name: '@storybook/angular',\n    options: {},\n  },\n  docs: {\n    autodocs: true,\n    defaultName: 'Docs'\n  }\n}"
                }
            ],
            "libs/mui-lib/src/lib/basic-button/basic-button.component.stories.ts": [
                {
                    "name": "CustomLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/basic-button/basic-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Custom Button Text',\n    disabled: false,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Custom Button Text\")).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/basic-button/basic-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Button Text',\n    disabled: true,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Button Text\")).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/basic-button/basic-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BasicButtonComponent>",
                    "defaultValue": "{\n  component: BasicButtonComponent,\n  title: 'BasicButtonComponent',\n  argTypes: {\n    label: { control: 'text' },\n    disabled: { control: 'boolean' },\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/basic-button/basic-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Button Text',\n    disabled: false,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Button Text\")).toBeTruthy();\n  },\n}"
                }
            ],
            "libs/mui-lib/src/lib/button/button.component.stories.ts": [
                {
                    "name": "CustomLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    disabled: false,\n    label: \"this is the label text\"\n  }\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    disabled: true\n  }\n}"
                },
                {
                    "name": "FabButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    disabled: false,\n    buttonType: ButtonType.FAB\n  }\n}"
                },
                {
                    "name": "FlatButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    disabled: false,\n    buttonType: ButtonType.FLAT\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonComponent>",
                    "defaultValue": "{\n  component: ButtonComponent,\n  title: 'ButtonComponent',\n  argTypes: {\n    label: {\n      control: {\n        type: 'text',\n      },\n    },\n    disabled: {\n      control: {\n        type: 'boolean',\n      },\n    },\n    buttonType: {\n      options: [\n        ButtonType.RAISED,\n        ButtonType.FAB,\n        ButtonType.BUTTON,\n        ButtonType.FLAT,\n        ButtonType.STROKED,\n        ButtonType.MINI_FAB\n      ],\n      control: {\n        type: 'radio',\n      },\n    },\n  },\n}"
                },
                {
                    "name": "NormalButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    disabled: false,\n    buttonType: ButtonType.BUTTON\n  }\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                },
                {
                    "name": "RaisedButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    disabled: false,\n    buttonType: ButtonType.RAISED\n  }\n}"
                },
                {
                    "name": "RaisedDisabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    disabled: true,\n    buttonType: ButtonType.RAISED\n  }\n}"
                },
                {
                    "name": "StrokedButton",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    disabled: false,\n    buttonType: ButtonType.STROKED\n  }\n}"
                }
            ],
            "libs/mui-lib/src/lib/flat-button/flat-button.component.stories.ts": [
                {
                    "name": "CustomLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/flat-button/flat-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Custom Button Text',\n    disabled: false,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText('Custom Button Text')).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/flat-button/flat-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n\n  args: {\n    label: 'Button Text',\n    disabled: true,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText('Button Text')).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/flat-button/flat-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<FlatButtonComponent>",
                    "defaultValue": "{\n  component: FlatButtonComponent,\n  title: 'FlatButtonComponent',\n  argTypes: {\n    label: { control: 'text' },\n    disabled: { control: 'boolean' },\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/flat-button/flat-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n\n  args: {\n    label: 'Button Text',\n    disabled: false,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText('Button Text')).toBeTruthy();\n  },\n}"
                }
            ],
            "libs/mui-lib/src/lib/raised-button/raised-button.component.stories.ts": [
                {
                    "name": "CustomLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/raised-button/raised-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Custom Raised Button',\n    disabled: false,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Custom Raised Button\")).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/raised-button/raised-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Raised Button',\n    disabled: true,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Raised Button\")).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/raised-button/raised-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RaisedButtonComponent>",
                    "defaultValue": "{\n  component: RaisedButtonComponent,\n  title: 'RaisedButtonComponent',\n  argTypes: {\n    label: { control: 'text' },\n    disabled: { control: 'boolean' },\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/raised-button/raised-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Raised Button',\n    disabled: false,\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Raised Button\")).toBeTruthy();\n  },\n}"
                }
            ],
            "libs/mui-lib/src/lib/input/input.component.stories.ts": [
                {
                    "name": "CustomPlaceHolderText",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    disabled: true,\n    placeholder: \"this is the placeholder text\"\n  }\n}"
                },
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    disabled: true\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<InputComponent>",
                    "defaultValue": "{\n  component: InputComponent,\n  title: 'InputComponent',\n  argTypes: {\n    label: {\n      control: {\n        type: 'text',\n      },\n    },\n    disabled: {\n      control: {\n        type: 'boolean',\n      },\n    },\n    placeholder: {\n      control: {\n        type: 'text',\n      },\n    },\n    value: {\n      control: {\n        type: 'text',\n      },\n    },\n    valueChange: {\n      action: 'valueChange',\n    },\n\n\n  },\n}"
                },
                {
                    "name": "NewLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    disabled: false,\n    placeholder: \"this is the placeholder text\",\n    label: \"New Label\"\n  }\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/mui-lib/.storybook/preview.ts": [
                {
                    "name": "decorators",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/.storybook/preview.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "[]",
                    "defaultValue": "[\n  moduleMetadata({\n    imports: [\n      BrowserAnimationsModule,\n      MatButtonModule,\n      MatDatepickerModule,\n      MatFormFieldModule,\n      MatInputModule,\n      MatIconModule,\n    ],\n  }),\n]"
                }
            ],
            "libs/mui-lib/src/lib/progress-spinner/progress-spinner.component.stories.ts": [
                {
                    "name": "DeterminateSpinner",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/progress-spinner/progress-spinner.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    // Example property for mode\n    mode: 'determinate',\n\n    // Example property for value\n    value: 50,\n\n    diameter: 10,\n    strokeWidth: 5\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByRole('progressbar')).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/progress-spinner/progress-spinner.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ProgressSpinnerComponent>",
                    "defaultValue": "{\n  component: ProgressSpinnerComponent,\n  title: 'ProgressSpinnerComponent',\n  argTypes: {\n    diameter: {\n      control: {\n        type: 'number',\n      },\n    },\n    strokeWidth: {\n      control: {\n        type: 'number',\n      },\n    },\n    mode: {\n      options: ['determinate', 'indeterminate'],\n      control: {\n        type: 'radio',\n      },\n    },\n    value: {\n      control: {\n        type: 'range',\n        min: 0,\n        max:100,\n        step: 10\n      },\n    },\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/progress-spinner/progress-spinner.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByRole('progressbar')).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "SmallSpinner",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/progress-spinner/progress-spinner.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    diameter: 20, // Example property for size\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByRole('progressbar')).toBeTruthy();\n  },\n}"
                }
            ],
            "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts": [
                {
                    "name": "Disabled",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    position: \"left\",\n    disabled: true\n  }\n}"
                },
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                },
                {
                    "name": "HideDelay5Seconds",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    position: \"above\",\n    disabled: false,\n    showDelay: 2000,\n    hideDelay: 5000\n  }\n}"
                },
                {
                    "name": "LeftPositonTip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    position: \"left\",\n    disabled: false\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ToolTipComponent>",
                    "defaultValue": "{\n  component: ToolTipComponent,\n  title: 'ToolTipComponent',\n  argTypes: {\n    tool: {\n      control: { type: 'text' },\n    },\n    tip: {\n      control: { type: 'text' },\n    },\n    position: {\n      control: { type: 'select' },\n      options: ['above', 'below', 'before', 'after', 'left', 'right'],\n    },\n    disabled: {\n      control: { type: 'boolean' },\n    },\n    showDelay: {\n      control: { type: 'number' },\n    },\n    hideDelay: {\n      control: { type: 'number' },\n    },\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                },
                {
                    "name": "RightPositionTip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    position: \"right\",\n    disabled: false\n  }\n}"
                },
                {
                    "name": "ShowDelay2Seconds",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    position: \"above\",\n    disabled: false,\n    showDelay: 2000\n  }\n}"
                },
                {
                    "name": "TipAboveTool",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    position: \"above\",\n    disabled: false\n  }\n}"
                }
            ],
            "libs/mui-lib/src/lib/avatar-chip/avatar-chip.component.stories.ts": [
                {
                    "name": "DisabledChip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/avatar-chip/avatar-chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    removable: false,\n    disabled: true\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/avatar-chip/avatar-chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<AvatarChipComponent>",
                    "defaultValue": "{\n  component: AvatarChipComponent,\n  title: 'AvatarChipComponent',\n  argTypes: {\n    avatar: {\n      control: {\n        type: 'text',\n      },\n    },\n    label: {\n      control: {\n        type: 'text',\n      },\n    },\n    removable: {\n      control: {\n        type: 'boolean',\n      },\n    },\n    disabled: {\n      control: {\n        type: 'boolean',\n      },\n    },\n  },\n}"
                },
                {
                    "name": "NewChipLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/avatar-chip/avatar-chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: \"New Chip\"\n  }\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/avatar-chip/avatar-chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/mui-lib/src/lib/chip/chip.component.stories.ts": [
                {
                    "name": "DisabledChip",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/chip/chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    disabled: true\n  }\n}"
                },
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/chip/chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/chip works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/chip/chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ChipComponent>",
                    "defaultValue": "{\n  component: ChipComponent,\n  title: 'ChipComponent',\n  argTypes: {\n    labels: {\n      control: {\n        type: 'text',\n      },\n    },\n    disabled: {\n      control: {\n        type: 'boolean',\n      },\n    },\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/chip/chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/mui-lib/src/lib/range-slider/range-slider.component.stories.ts": [
                {
                    "name": "DisabledRangeSlider",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/range-slider/range-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    disabled: true\n  }\n}"
                },
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/range-slider/range-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/range-slider works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/range-slider/range-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<RangeSliderComponent>",
                    "defaultValue": "{\n  component: RangeSliderComponent,\n  title: 'RangeSliderComponent',\n  argTypes: {\n    disabled: {\n      control: 'boolean',\n    },\n    max: {\n      control: 'number',\n    },\n    min: {\n      control: 'number',\n    },\n    showTicks: {\n      control: 'boolean',\n    },\n    step: {\n      control: 'number',\n    },\n    thumbLabel: {\n      control: 'boolean',\n    },\n    startValue: {\n      control: 'number',\n    },\n    endValue: {\n      control: 'number',\n    },\n  },\n}"
                },
                {
                    "name": "Min10Max1000",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/range-slider/range-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    disabled: false,\n    max: 1000,\n    min: 10\n  }\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/range-slider/range-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                },
                {
                    "name": "WithThumbLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/range-slider/range-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    disabled: false,\n    max: 1000,\n    min: 10,\n    showTicks: false,\n    thumbLabel: true\n  }\n}"
                },
                {
                    "name": "WithTicks",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/range-slider/range-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    disabled: false,\n    max: 10000,\n    min: 10,\n    showTicks: true,\n    thumbLabel: false\n  }\n}"
                }
            ],
            "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts": [
                {
                    "name": "DisabledSlider",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    disabled: true\n  }\n}"
                },
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n\n}"
                },
                {
                    "name": "MaxValue1000",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: \"Basic Slider\",\n    max: 1000\n  },\n\n  play: async (\n    {\n      canvasElement\n    }\n  ) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Basic Slider\")).toBeTruthy();\n  }\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BasicSliderComponent>",
                    "defaultValue": "{\n  component: BasicSliderComponent,\n  title: 'BasicSliderComponent',\n  argTypes: {\n    disabled: {\n      control: 'boolean',\n    },\n    max: {\n      control: 'number',\n    },\n    min: {\n      control: 'number',\n    },\n    showTicks: {\n      control: 'boolean',\n    },\n    step: {\n      control: 'number',\n    },\n    thumbLabel: {\n      control: 'boolean',\n    },\n    value: {\n      control: 'number',\n    },\n  },\n}"
                },
                {
                    "name": "MinValue50",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: \"Basic Slider\",\n    max: 1000,\n    min: 50\n  },\n\n  play: async (\n    {\n      canvasElement\n    }\n  ) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Basic Slider\")).toBeTruthy();\n  }\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: 'Basic Slider',\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Basic Slider\")).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "SliderStepWith10",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: \"Basic Slider\",\n    max: 1000,\n    min: 50,\n    step: 10\n  },\n\n  play: async (\n    {\n      canvasElement\n    }\n  ) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Basic Slider\")).toBeTruthy();\n  }\n}"
                },
                {
                    "name": "SliderWithThumbLabel",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: \"Basic Slider\",\n    max: 1000,\n    min: 50,\n    step: 10,\n    thumbLabel: true\n  },\n\n  play: async (\n    {\n      canvasElement\n    }\n  ) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Basic Slider\")).toBeTruthy();\n  }\n}"
                },
                {
                    "name": "SliderWithTicks",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    label: \"Basic Slider\",\n    max: 1000,\n    min: 50,\n    step: 10,\n    thumbLabel: true,\n    showTicks: true\n  },\n\n  play: async (\n    {\n      canvasElement\n    }\n  ) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Basic Slider\")).toBeTruthy();\n  }\n}"
                }
            ],
            "libs/mui-lib/src/lib/basic-icon/basic-icon.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/basic-icon/basic-icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/basic-icon works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/basic-icon/basic-icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BasicIconComponent>",
                    "defaultValue": "{\n  component: BasicIconComponent,\n  title: 'BasicIconComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/basic-icon/basic-icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/mui-lib/src/lib/basic-toolbar/basic-toolbar.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/basic-toolbar/basic-toolbar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/basic-toolbar works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/basic-toolbar/basic-toolbar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<BasicToolbarComponent>",
                    "defaultValue": "{\n  component: BasicToolbarComponent,\n  title: 'BasicToolbarComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/basic-toolbar/basic-toolbar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/mui-lib/src/lib/button-toggle/button-toggle.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/button-toggle/button-toggle.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/button-toggle/button-toggle.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ButtonToggleComponent>",
                    "defaultValue": "{\n  component: ButtonToggleComponent,\n  title: 'ButtonToggleComponent',\n  argTypes: {\n    groupLabel: {\n      control: {\n        type: 'text',\n      },\n      defaultValue: 'Select an option',\n    },\n    selection: {\n\n        options: ['single', 'multiple'],\n        control: {\n          type: 'radio',\n        },\n    },\n    options: {\n      control: {\n        type: 'object',\n      },\n      defaultValue: ['Bold', 'Italic', 'Underline'],\n    },\n    disabled: {\n      control: {\n        type: 'boolean',\n      },\n      defaultValue: false,\n    },\n    value: {\n      control: {\n        type: 'text',\n      },\n      defaultValue: '',\n    },\n    hideSelectionIndicator: {\n      control: {\n        type: 'boolean',\n      },\n      defaultValue: false,\n    },\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/button-toggle/button-toggle.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/mui-lib/src/lib/chip-drag-drop/chip-drag-drop.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/chip-drag-drop/chip-drag-drop.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(\"Apple\")).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/chip-drag-drop/chip-drag-drop.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<ChipDragDropComponent>",
                    "defaultValue": "{\n  component: ChipDragDropComponent,\n  title: 'ChipDragDropComponent',\n  argTypes: {\n    items: {\n      control: {\n        type: 'object',\n      },\n    },\n    disabled: {\n      control: {\n        type: 'boolean',\n      },\n    },\n  },\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/chip-drag-drop/chip-drag-drop.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/mui-lib/src/lib/date-picker/date-picker.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/date-picker/date-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/date-picker works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/date-picker/date-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<DatePickerComponent>",
                    "defaultValue": "{\n  component: DatePickerComponent,\n  title: 'DatePickerComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/date-picker/date-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/mui-lib/src/lib/stacked-chips/stacked-chips.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/stacked-chips/stacked-chips.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/stacked-chips works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/stacked-chips/stacked-chips.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<StackedChipsComponent>",
                    "defaultValue": "{\n  component: StackedChipsComponent,\n  title: 'StackedChipsComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/stacked-chips/stacked-chips.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/mui-lib/src/lib/tabs/tabs.component.stories.ts": [
                {
                    "name": "Heading",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/tabs/tabs.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    expect(canvas.getByText(/tabs works!/gi)).toBeTruthy();\n  },\n}"
                },
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/tabs/tabs.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TabsComponent>",
                    "defaultValue": "{\n  component: TabsComponent,\n  title: 'TabsComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/tabs/tabs.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {},\n}"
                }
            ],
            "libs/mui-lib/src/lib/select/select.component.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<SelectComponent>",
                    "defaultValue": "{\n  component: SelectComponent,\n  title: 'SelectComponent',\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n    list: [\n      'Apple',\n      'Banana',\n      'Cherry',\n      'Date',\n    ],\n  },\n  play: async ({ canvasElement }) => {\n    const canvas = within(canvasElement);\n    const selectElement = canvas.getByRole('combobox');\n    expect(selectElement).toBeTruthy();\n  },\n}"
                }
            ],
            "libs/mui-lib/src/lib/table/table.component.stories.ts": [
                {
                    "name": "meta",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Meta<TableComponent>",
                    "defaultValue": "{\n  component: TableComponent,\n  title: 'TableComponent',\n  argTypes: {\n    displayedColumns: {\n      control: {\n        type: 'object',\n      },\n    },\n    dataSource: {\n      control: {\n        type: 'object',\n      },\n    },\n  },\n\n}"
                },
                {
                    "name": "Primary",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "libs/mui-lib/src/lib/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Story",
                    "defaultValue": "{\n  args: {\n  },\n\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "libs/mui-lib/src/lib/avatar-chip/avatar-chip.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<AvatarChipComponent>",
                    "file": "libs/mui-lib/src/lib/avatar-chip/avatar-chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/mui-lib/src/lib/basic-button/basic-button.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BasicButtonComponent>",
                    "file": "libs/mui-lib/src/lib/basic-button/basic-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/mui-lib/src/lib/basic-icon/basic-icon.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BasicIconComponent>",
                    "file": "libs/mui-lib/src/lib/basic-icon/basic-icon.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BasicSliderComponent>",
                    "file": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/mui-lib/src/lib/basic-toolbar/basic-toolbar.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<BasicToolbarComponent>",
                    "file": "libs/mui-lib/src/lib/basic-toolbar/basic-toolbar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/mui-lib/src/lib/button/button.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonComponent>",
                    "file": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/mui-lib/src/lib/button-toggle/button-toggle.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ButtonToggleComponent>",
                    "file": "libs/mui-lib/src/lib/button-toggle/button-toggle.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/mui-lib/src/lib/card/card.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CardComponent>",
                    "file": "libs/mui-lib/src/lib/card/card.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/mui-lib/src/lib/check-box/check-box.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<CheckBoxComponent>",
                    "file": "libs/mui-lib/src/lib/check-box/check-box.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/mui-lib/src/lib/chip-drag-drop/chip-drag-drop.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ChipDragDropComponent>",
                    "file": "libs/mui-lib/src/lib/chip-drag-drop/chip-drag-drop.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/mui-lib/src/lib/chip/chip.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ChipComponent>",
                    "file": "libs/mui-lib/src/lib/chip/chip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/mui-lib/src/lib/date-picker/date-picker.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<DatePickerComponent>",
                    "file": "libs/mui-lib/src/lib/date-picker/date-picker.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/mui-lib/src/lib/flat-button/flat-button.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<FlatButtonComponent>",
                    "file": "libs/mui-lib/src/lib/flat-button/flat-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/mui-lib/src/lib/input/input.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<InputComponent>",
                    "file": "libs/mui-lib/src/lib/input/input.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/mui-lib/src/lib/progress-bar/progress-bar.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProgressBarComponent>",
                    "file": "libs/mui-lib/src/lib/progress-bar/progress-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RadioButtonComponent>",
                    "file": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/mui-lib/src/lib/raised-button/raised-button.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RaisedButtonComponent>",
                    "file": "libs/mui-lib/src/lib/raised-button/raised-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/mui-lib/src/lib/progress-spinner/progress-spinner.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ProgressSpinnerComponent>",
                    "file": "libs/mui-lib/src/lib/progress-spinner/progress-spinner.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/mui-lib/src/lib/range-slider/range-slider.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RangeSliderComponent>",
                    "file": "libs/mui-lib/src/lib/range-slider/range-slider.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/mui-lib/src/lib/select/select.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SelectComponent>",
                    "file": "libs/mui-lib/src/lib/select/select.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/mui-lib/src/lib/slide-toggle/slide-toggle.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SlideToggleComponent>",
                    "file": "libs/mui-lib/src/lib/slide-toggle/slide-toggle.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<SnackBarComponent>",
                    "file": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/mui-lib/src/lib/raised-button/raised-button.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<RaisedButtonComponent>",
                    "file": "libs/mui-lib/src/lib/raised-button/raised-button.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/mui-lib/src/lib/stacked-chips/stacked-chips.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<StackedChipsComponent>",
                    "file": "libs/mui-lib/src/lib/stacked-chips/stacked-chips.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/mui-lib/src/lib/table/table.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TableComponent>",
                    "file": "libs/mui-lib/src/lib/table/table.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/mui-lib/src/lib/tabs/tabs.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<TabsComponent>",
                    "file": "libs/mui-lib/src/lib/tabs/tabs.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ],
            "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts": [
                {
                    "name": "Story",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "StoryObj<ToolTipComponent>",
                    "file": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 183
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "libs/mui-lib/.storybook/main.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "config",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/.storybook/preview.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "decorators",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/avatar-chip/avatar-chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledChip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/avatar-chip/avatar-chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/avatar-chip/avatar-chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NewChipLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/avatar-chip/avatar-chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/avatar-chip/avatar-chip.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/basic-button/basic-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/basic-button/basic-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/basic-button/basic-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/basic-button/basic-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/basic-button/basic-button.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/basic-icon/basic-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/basic-icon/basic-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/basic-icon/basic-icon.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/basic-icon/basic-icon.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledSlider",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MaxValue1000",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "MinValue50",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SliderStepWith10",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SliderWithThumbLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SliderWithTicks",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/basic-slider/basic-slider.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/basic-toolbar/basic-toolbar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/basic-toolbar/basic-toolbar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/basic-toolbar/basic-toolbar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/basic-toolbar/basic-toolbar.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/button-toggle/button-toggle.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/button-toggle/button-toggle.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/button-toggle/button-toggle.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/button-toggle/button-toggle.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FabButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "FlatButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NormalButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RaisedButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RaisedDisabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "StrokedButton",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/button/button.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/card/card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ChangedSubtitle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/card/card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ChangedTitle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/card/card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/card/card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/card/card.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/card/card.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/check-box/check-box.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CheckboxWithSubtasks",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/check-box/check-box.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CheckedCheckbox",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/check-box/check-box.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledAndCheckedCheckbox",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/check-box/check-box.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledCheckbox",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/check-box/check-box.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/check-box/check-box.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/check-box/check-box.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/chip-drag-drop/chip-drag-drop.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/chip-drag-drop/chip-drag-drop.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/chip-drag-drop/chip-drag-drop.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/chip-drag-drop/chip-drag-drop.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/chip/chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledChip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/chip/chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/chip/chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/chip/chip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/chip/chip.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/date-picker/date-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/date-picker/date-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/date-picker/date-picker.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/date-picker/date-picker.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/flat-button/flat-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/flat-button/flat-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/flat-button/flat-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/flat-button/flat-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/flat-button/flat-button.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomPlaceHolderText",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NewLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/input/input.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/input/input.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/progress-bar/progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Buffer",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/progress-bar/progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Determinate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/progress-bar/progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Indeterminate",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/progress-bar/progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/progress-bar/progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/progress-bar/progress-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Query",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/progress-bar/progress-bar.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/progress-spinner/progress-spinner.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DeterminateSpinner",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/progress-spinner/progress-spinner.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/progress-spinner/progress-spinner.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/progress-spinner/progress-spinner.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "SmallSpinner",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/progress-spinner/progress-spinner.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "AfterLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "BeforeLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomLabels",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisplayGroupName",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisplaySelectedOption",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Required",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/radio-button/radio-button.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/raised-button/raised-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/raised-button/raised-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/raised-button/raised-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/raised-button/raised-button.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/raised-button/raised-button.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/range-slider/range-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledRangeSlider",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/range-slider/range-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/range-slider/range-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/range-slider/range-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Min10Max1000",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/range-slider/range-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/range-slider/range-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithThumbLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/range-slider/range-slider.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "WithTicks",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/range-slider/range-slider.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/select/select.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/select/select.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/slide-toggle/slide-toggle.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CheckedDisabledToggle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/slide-toggle/slide-toggle.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "DisabledToggle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/slide-toggle/slide-toggle.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/slide-toggle/slide-toggle.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/slide-toggle/slide-toggle.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NewLabelForToggle",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/slide-toggle/slide-toggle.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/slide-toggle/slide-toggle.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CenterTopPosition",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "CustomLabel",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Duration5Seconds",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "EndBottomPosition",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "NewMessageNewAction",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "StartBottom",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "StartTopPosition",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/snack-bar/snack-bar.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/stacked-chips/stacked-chips.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/stacked-chips/stacked-chips.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/stacked-chips/stacked-chips.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/stacked-chips/stacked-chips.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/table/table.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/table/table.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/tabs/tabs.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/tabs/tabs.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/tabs/tabs.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/tabs/tabs.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Disabled",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Heading",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "HideDelay5Seconds",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "LeftPositonTip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "meta",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "Primary",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "RightPositionTip",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "ShowDelay2Seconds",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "TipAboveTool",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "libs/mui-lib/src/lib/tool-tip/tool-tip.component.stories.ts",
                "type": "type alias",
                "linktype": "miscellaneous",
                "linksubtype": "typealias",
                "name": "Story",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            }
        ]
    }
}